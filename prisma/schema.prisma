// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum difficulty {
  easy
  medium
  hard
  hard_p
}

model puzzle {
  id          String   @id @default(cuid())
  name        String
  description String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  difficultyId difficulty
  logic_puzzle logic_puzzle?
}

model logic_puzzle {
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  puzzleId String @id
  puzzle   puzzle @relation(fields: [puzzleId], references: [id])

  hint hint[]

  attribute attribute[]

  solution_group solution_group[]
}

model hint {
  id        String   @id @default(cuid())
  order     Int
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  logicPuzzleId String
  logic_puzzle  logic_puzzle @relation(fields: [logicPuzzleId], references: [puzzleId])
}

model attribute {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  logicPuzzleId String
  logic_puzzle  logic_puzzle @relation(fields: [logicPuzzleId], references: [puzzleId])
  options       options[]

  solution_value solution_value[]
}

model options {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attributeId String

  attribute attribute @relation(fields: [attributeId], references: [id])

  solution_value solution_value[]
}

model solution_group {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  logicPuzzleId String
  logic_puzzle  logic_puzzle @relation(fields: [logicPuzzleId], references: [puzzleId])

  solution_value solution_value[]
}

model solution_value {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  solutionGroupId String
  solution_group  solution_group @relation(fields: [solutionGroupId], references: [id])

  attributeId String
  attribute   attribute @relation(fields: [attributeId], references: [id])

  optionsId String
  options   options @relation(fields: [optionsId], references: [id])
}
